<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.life.pc.dao.LearnEnglishDao">
	<resultMap id="BaseResultMap" type="com.life.pc.model.LearnEnglishModel">
		<result column="id" property="id" jdbcType="VARCHAR" />
		<result column="usercode" property="usercode" jdbcType="VARCHAR" />
		<result column="externalLinks" property="externallinks" jdbcType="VARCHAR" />
		<result column="externalLinks2" property="externallinks2" jdbcType="VARCHAR" />
		<result column="externalLinks3" property="externallinks3" jdbcType="VARCHAR" />
		<result column="note" property="note" jdbcType="VARCHAR" />
		<result column="diary" property="diary" jdbcType="VARCHAR" />
		<result column="headline" property="headline" jdbcType="VARCHAR" />
		<result column="timeClass" property="timeclass" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		id, usercode, externalLinks, externalLinks2, externalLinks3, note, diary,
		headline, timeClass
	</sql>

	<select id="selectListByUser" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from learn_english where usercode=#{usercode,jdbcType=VARCHAR} order by diary desc limit ${number}
	</select>
	<select id="getCountByUser" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from learn_english where usercode=#{usercode,jdbcType=VARCHAR}
	</select>
	<select id="selectByTimeClass" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from learn_english where timeClass=#{timeClass,jdbcType=VARCHAR}
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from learn_english
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from learn_english
		where id = #{id,jdbcType=VARCHAR}
	</delete>

	<insert id="insertSelective" parameterType="com.life.pc.model.LearnEnglishModel">
		insert into learn_english
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="usercode != null">
				usercode,
			</if>
			<if test="externallinks != null">
				externalLinks,
			</if>
			<if test="externallinks2 != null">
				externalLinks2,
			</if>
			<if test="externallinks3 != null">
				externalLinks3,
			</if>
			<if test="note != null">
				note,
			</if>
			<if test="diary != null">
				diary,
			</if>
			<if test="headline != null">
				headline,
			</if>
			<if test="timeclass != null">
				timeClass,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="usercode != null">
				#{usercode,jdbcType=VARCHAR},
			</if>
			<if test="externallinks != null">
				#{externallinks,jdbcType=VARCHAR},
			</if>
			<if test="externallinks2 != null">
				#{externallinks2,jdbcType=VARCHAR},
			</if>
			<if test="externallinks3 != null">
				#{externallinks3,jdbcType=VARCHAR},
			</if>
			<if test="note != null">
				#{note,jdbcType=VARCHAR},
			</if>
			<if test="diary != null">
				#{diary,jdbcType=VARCHAR},
			</if>
			<if test="headline != null">
				#{headline,jdbcType=VARCHAR},
			</if>
			<if test="timeclass != null">
				#{timeclass,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.life.pc.model.LearnEnglishModel">
		update learn_english
		<set>
			<if test="usercode != null">
				usercode = #{usercode,jdbcType=VARCHAR},
			</if>
			<if test="externallinks != null">
				externalLinks = #{externallinks,jdbcType=VARCHAR},
			</if>
			<if test="externallinks2 != null">
				externalLinks2 = #{externallinks2,jdbcType=VARCHAR},
			</if>
			<if test="externallinks3 != null">
				externalLinks3 = #{externallinks3,jdbcType=VARCHAR},
			</if>
			<if test="note != null">
				note = #{note,jdbcType=VARCHAR},
			</if>
			<if test="diary != null">
				diary = #{diary,jdbcType=VARCHAR},
			</if>
			<if test="headline != null">
				headline = #{headline,jdbcType=VARCHAR},
			</if>
			<if test="timeclass != null">
				timeClass = #{timeclass,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
</mapper>